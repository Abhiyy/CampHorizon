07/08/2017

site.css
--------

.topMargin {
margin-top:10% !important;
}

.rightBorder {
    border-right:1px solid #e3e3e3;
}

_AdminLayoutMaster.cshtml
--------------------------

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}

    <div class="row topMargin">
        <div class="col-md-12">
            <div class="col-md-3 rightBorder">

                <h4 class="text-center text-capitalize text-info">Menu </h4>
               
                <ul class="list-group">
                    <li class="list-group-item"><a href="@Url.Action("Index","BookingRequests")">Booking Requests</a> </li>
                    <li class="list-group-item"><a href="@Url.Action("Index","Packages")">Packages</a></li>
                    <li class="list-group-item"><a href="@Url.Action("Index","Slider")">Advertisements</a></li>
                    <li class="list-group-item"><a href="@Url.Action("Index","Offers")">Testimonials</a></li>
                    <li class="list-group-item"><a href="@Url.Action("Index","Gallery")">Gallery</a></li>
                    <li class="list-group-item"><a href="@Url.Action("Index","HomePageConfigurations")">Home Page Configurations</a></li>
                </ul>
            </div>
            <div class="col-md-9">
                @RenderBody()
            </div>
        </div>
</div>

Admin Index
---------------

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayoutMaster.cshtml";
}
<h2>DASHBOARD</h2>
<hr />
<div class="row">
    <div class="col-md-12">
        @*Charts will be here*@ 
    </div>
</div>
<div class="row">
    <div class="col-md-12">

    </div>
</div>

web.config
----------------
 <add key="helpline" value="+91-8860795399" />
    <add key="emailhelp" value="info@thecamphorizon.com" />
    
_LayoutMaster.cshtml
-----------------------
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    <link href="~/Content/bootstrap.readable.min.css" rel="stylesheet" />
    <link href="~/Content/font-awesome.min.css" rel="stylesheet" />
    <link href="~/Content/Site.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-1.9.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <link href="~/Content/animate.min.css" rel="stylesheet" />
</head>
<body>
    <header class="col-md-12 col-sm-12 col-lg-12">
        <nav class="navbar navbar-inverse navbar-fixed-top">
  <div class="container-fluid ">
      <div class="row" style="float:right;">
          <div class="col-md-12">
              <span class="label label-info"><i class="fa fa-phone"></i> @System.Configuration.ConfigurationManager.AppSettings["helpline"].ToString()</span>
              <span class="label label-primary"><i class="fa fa-envelope"></i>  @System.Configuration.ConfigurationManager.AppSettings["emailhelp"].ToString()</span>
          </div>
         
      </div>

      <div class="row">
          <div class="col-md-12">
              <div class="navbar-header">
                  <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-2">
                      <span class="sr-only">Toggle navigation</span>
                      <span class="icon-bar"></span>
                      <span class="icon-bar"></span>
                      <span class="icon-bar"></span>
                  </button>
                  <a class="navbar-brand" href="#">
                      @*<strong>The Camp Horizon</strong>*@
                      <img src="~/Images/thecamphorizonlogo2.png" style="width:200px;margin-top:-20%" />
                  </a>
              </div>
              <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-2">
                  <ul class="nav navbar-nav">
                      <li><a href="#">About Us <span class="sr-only">(current)</span></a></li>

                      <li class="dropdown">
                          <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"> <i class="fa fa-hotel"></i> Rooms<span class="caret"></span></a>
                          <ul class="dropdown-menu" role="menu">
                              <li><a href="#">Standard</a></li>
                              <li><a href="#">Deluxe</a></li>

                              <li class="divider"></li>
                              <li><a href="#">Luxury</a></li>
                          </ul>
                      </li>
                      <li class="dropdown">
                          <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-bicycle"></i> Activities <span class="caret"></span></a>
                          <ul class="dropdown-menu" role="menu">
                              <li><a href="#">Trekking</a></li>
                              <li><a href="#">Nature Walk</a></li>
                              <li><a href="#">Local Sightseeing</a></li>
                          </ul>
                      </li>
                      @*  <li class="dropdown">
                      <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Explore <span class="caret"></span></a>
                      <ul class="dropdown-menu" role="menu">
                        <li><a href="#">Mukteshwar</a></li>
                        <li><a href="#">Binsar</a></li>
                        <li><a href="#">Munsiyari</a></li>
                      </ul>
                    </li>*@
                      <li><a href="#"><i class="fa fa-image"></i> Gallery</a></li>
                  </ul>
                  <form class="navbar-form navbar-left" role="search">
                      <div class="form-group">
                          <input type="text" class="form-control" placeholder="Search for packages">
                      </div>
                      <button type="submit" class="btn btn-default"><i class="fa fa-search"></i></button>
                  </form>
                  <ul class="nav navbar-nav navbar-right ">
                      @*<li><a href="#" class="btn btn-default">Call: <i class="fa fa-mobile"></i> +91-8860795399</a></li>*@
                      @if(!User.Identity.IsAuthenticated)
         {
              <li><a href="@Url.Action("Index","Login")" class="btn btn-default"> <i class="fa fa-user"></i> Login</a></li>
         }else{
              <li class="dropdown">
                  <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-user"></i> Hi, Admin <span class="caret"></span></a>
                  <ul class="dropdown-menu" role="menu">
                      <li><a href="#">My Profile</a></li>
                      <li><a href="@Url.Action("Logout","Login")">Log out</a></li>

                  </ul>
              </li>
         }
                  </ul>
              </div>
              </div>
          </div>
  </div>
</nav>
    </header>
    <div>
        @RenderBody()
    </div>
    <hr />
    <section id="footer">
	<footer>
		<div class="row sm-footer">
			<div class="container clear-padding">
				<div class="col-md-3 col-sm-6 footer-about-box">
					<h4>THE CAMP HORIZON</h4>
					<p>Some text.</p>
					<a href="#">READ MORE</a>
				</div>
				<div class="col-md-3 col-sm-6 contact-box">
					<h4>CONTACT US</h4>
					<p><i class="fa fa-home"></i> Street #123, DELHI/p>
					<p><i class="fa fa-envelope-o"></i> email@domain.com</p>
					<p><i class="fa fa-phone"></i> +91 8860795399</p>
					<p class="social-media">
						<a href="#"><i class="fa fa-facebook"></i></a>
						<a href="#"><i class="fa fa-twitter"></i></a>
						<a href="#"><i class="fa fa-google-plus"></i></a>
						<a href="#"><i class="fa fa-instagram"></i></a>
					</p>
				</div>
				<div class="clearfix visible-sm-block"></div>
				<div class="col-md-3 col-sm-6 footer-gallery">
					<h4>GALLERY</h4>
					<img src="../Images/camp1.jpg" alt="cruise" style="width:80px;height:60px">
					<img src="../Images/camp2.jpg" alt="cruise" style="width:80px;height:60px">
					<img src="../Images/camp3.jpg" alt="cruise" style="width:80px;height:60px">
					<img src="../Images/camp1.jpg" alt="cruise" style="width:80px;height:60px">
					<img src="../Images/camp2.jpg" alt="cruise" style="width:80px;height:60px">
					<img src="../Images/camp3.jpg" alt="cruise" style="width:80px;height:60px">
				</div>
				<div class="col-md-3 col-sm-6 footer-subscribe">
					<h4>SUBSCRIBE</h4>
					<p>Don't miss any deal. Subscribe to get offers alerts.</p>
					<form>
						<div class="col-md-10 col-sm-10 col-xs-9 clear-padding">
							<input type="email" required="" class="form-control" placeholder="Enter Your Email">
						</div>
						<div class="col-md-2 col-sm-2 col-xs-3 clear-padding">
							<button type="submit"><i class="fa fa-paper-plane"></i></button>
						</div>
					</form>	
				</div>
			</div>
		</div>
		<div class="clearfix"></div>
		<div class="row sm-footer-nav text-center">
			<p>
				<a href="#">HOME</a>
				<a href="#">ROOM</a>
				<a href="#">SERVICE</a>
				<a href="#">GALLERY</a>
			</p>
			<p class="copyright">
				<i class="fa fa-copyright"></i>	2017 THE CAMP HORIZON ALL RIGHTS RESERVED
			</p>
			<div class="go-up">
				<a href="#"><i class="fa fa-arrow-up"></i></a>
			</div>
		</div>
	</footer>
</section>
</body>
</html>
==========================================

CREATE TABLE [dbo].[Packages]
(
	[Id] INT NOT NULL PRIMARY KEY,
	[Name]	varchar(256),
	[Description] nvarchar(max),
	[Price] decimal(8,2),
	[Active] bit,
	[Duration] smallint,
	[CreatedDate] datetime,
	[UpdatedDate] datetime,
	[CreatedBy] varchar(30),
	[UpdatedBy] varchar(30)
)

CREATE TABLE [dbo].[PackageInclusions]
(
	[Id] INT NOT NULL PRIMARY KEY,
	[PackageID] int,
	[Inclusions] nvarchar(max),
	[CreateDate] datetime,
	[UpdateDate] datetime,
	[CreatedBy] varchar(30),
	[UpdatedBy] varchar(30), 
    CONSTRAINT [FK_PackageInclusions_Packages] FOREIGN KEY ([PackageID]) REFERENCES [Packages]([ID])
)


CREATE TABLE [dbo].[PackageExclusions]
(
	[Id] INT NOT NULL PRIMARY KEY,
	[PackageID] int,
	[Exclusions] nvarchar(max),
	[CreateDate] datetime,
	[UpdateDate] datetime,
	[CreatedBy] varchar(30),
	[UpdatedBy] varchar(30), 
    CONSTRAINT [FK_PackageExclusions_Packages] FOREIGN KEY ([PackageID]) REFERENCES [Packages]([ID])
)



CREATE TABLE [dbo].[PackageItinerary]
(
	[Id] INT NOT NULL PRIMARY KEY,
	[PackageID] int,
	[Itinerary] nvarchar(max),
	[CreateDate] datetime,
	[UpdateDate] datetime,
	[CreatedBy] varchar(30),
	[UpdatedBy] varchar(30), 
	CONSTRAINT [FK_PackageItinerary_Packages] FOREIGN KEY ([PackageID]) REFERENCES [Packages]([ID])
)

CREATE TABLE [dbo].[CancellationTerms]
(
	[Id] INT NOT NULL PRIMARY KEY, 
    [CancellationTerm] NVARCHAR(MAX) NULL
)

CREATE TABLE [dbo].[PackageCancellationTermsMappings]
(
	[Id] INT NOT NULL PRIMARY KEY,
	[PackageID] int,
	[CancellationTermID] int, 
    CONSTRAINT [FK_PackageCancellationTermsMappings_Packages] FOREIGN KEY ([PackageID]) REFERENCES [Packages]([ID])

)

CREATE TABLE [dbo].[Facilities]
(
	[Id] INT NOT NULL PRIMARY KEY, 
    [Facility] NVARCHAR(200) NULL
)

CREATE TABLE [dbo].[PackageFacilityMapping]
(
	[Id] INT NOT NULL PRIMARY KEY,
	[PackageID] int,
	[FacilityID] int, 
    CONSTRAINT [FK_PackageFacilityMapping_ToTable] FOREIGN KEY ([PackageID]) REFERENCES [Packages]([ID])
)

9-Aug-2017
------------------------

_PartialAlerts.cshtml
=========================

@{
    var alerts = TempData.ContainsKey(Camphorizon.Web.Helpers.Alert.TempDataKey)
                ? (List<Camphorizon.Web.Helpers.Alert>)TempData[Camphorizon.Web.Helpers.Alert.TempDataKey]
                : new List<Camphorizon.Web.Helpers.Alert>();

    foreach (var alert in alerts)
    {
        var dismissableClass = alert.Dismissable ? "alert-dismissable" : null;
        <div class="alert alert-@alert.AlertStyle @dismissableClass">
            @if (alert.Dismissable)
            {
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            }
            @Html.Raw(alert.Message)
           
        </div>
    }

   
    }

WebPortalConfigurationsViewModel.cs
=================================================

public class WebPortalConfigurationsViewModel
    {
        public string Contact { get; set; }

        public string Address { get; set; }

        public string HelpEmail { get; set; }
    }
    
    
    _LayoutMaster.cshtml
    =======================================
    
    <!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    <link href="~/Content/bootstrap.readable.min.css" rel="stylesheet" />
    <link href="~/Content/font-awesome.min.css" rel="stylesheet" />
    <link href="~/Content/Site.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-1.9.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <link href="~/Content/animate.min.css" rel="stylesheet" />
</head>
<body>
    <header class="col-md-12 col-sm-12 col-lg-12">
        <nav class="navbar navbar-inverse navbar-fixed-top">
  <div class="container-fluid ">
      <div class="row" style="float:right;">
          <div class="col-md-12">
              <span class="label label-info"><i class="fa fa-phone"></i> @ViewBag.Contact.ToString()</span>
              <span class="label label-primary"><i class="fa fa-envelope"></i>  @ViewBag.HelpEmail.ToString()</span>
          </div>
         
      </div>

      <div class="row">
          <div class="col-md-12">
              <div class="navbar-header">
                  <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-2">
                      <span class="sr-only">Toggle navigation</span>
                      <span class="icon-bar"></span>
                      <span class="icon-bar"></span>
                      <span class="icon-bar"></span>
                  </button>
                  <a class="navbar-brand" href="#">
                      @*<strong>The Camp Horizon</strong>*@
                      <img src="~/Images/thecamphorizonlogo2.png" style="width:200px;margin-top:-20%" />
                  </a>
              </div>
              <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-2">
                  <ul class="nav navbar-nav">
                      <li><a href="#">About Us <span class="sr-only">(current)</span></a></li>

                      <li class="dropdown">
                          <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"> <i class="fa fa-hotel"></i> Rooms<span class="caret"></span></a>
                          <ul class="dropdown-menu" role="menu">
                              <li><a href="#">Standard</a></li>
                              <li><a href="#">Deluxe</a></li>

                              <li class="divider"></li>
                              <li><a href="#">Luxury</a></li>
                          </ul>
                      </li>
                      <li class="dropdown">
                          <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-bicycle"></i> Activities <span class="caret"></span></a>
                          <ul class="dropdown-menu" role="menu">
                              <li><a href="#">Trekking</a></li>
                              <li><a href="#">Nature Walk</a></li>
                              <li><a href="#">Local Sightseeing</a></li>
                          </ul>
                      </li>
                      @*  <li class="dropdown">
                      <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Explore <span class="caret"></span></a>
                      <ul class="dropdown-menu" role="menu">
                        <li><a href="#">Mukteshwar</a></li>
                        <li><a href="#">Binsar</a></li>
                        <li><a href="#">Munsiyari</a></li>
                      </ul>
                    </li>*@
                      <li><a href="#"><i class="fa fa-image"></i> Gallery</a></li>
                  </ul>
                  <form class="navbar-form navbar-left" role="search">
                      <div class="form-group">
                          <input type="text" class="form-control" placeholder="Search for packages">
                      </div>
                      <button type="submit" class="btn btn-default"><i class="fa fa-search"></i></button>
                  </form>
                  <ul class="nav navbar-nav navbar-right ">
                      @*<li><a href="#" class="btn btn-default">Call: <i class="fa fa-mobile"></i> +91-8860795399</a></li>*@
                      @if(!User.Identity.IsAuthenticated)
         {
              <li><a href="@Url.Action("Index","Login")" class="btn btn-default"> <i class="fa fa-user"></i> Login</a></li>
         }else{
              <li class="dropdown">
                  <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-user"></i> Hi, Admin <span class="caret"></span></a>
                  <ul class="dropdown-menu" role="menu">
                      <li><a href="#">My Profile</a></li>
                      <li><a href="@Url.Action("Logout","Login")">Log out</a></li>

                  </ul>
              </li>
         }
                  </ul>
              </div>
              </div>
          </div>
  </div>
</nav>
    </header>
    <div>
        @RenderBody()
    </div>
    <hr />
    <section id="footer">
	<footer>
		<div class="row sm-footer">
			<div class="container clear-padding">
				<div class="col-md-3 col-sm-6 footer-about-box">
					<h4>THE CAMP HORIZON</h4>
					<p>Some text.</p>
					<a href="#">READ MORE</a>
				</div>
				<div class="col-md-3 col-sm-6 contact-box">
					<h4>CONTACT US</h4>
					<p><i class="fa fa-home"></i> @ViewBag.Address</p>
					<p><i class="fa fa-envelope-o"></i> @ViewBag.HelpEmail</p>
					<p><i class="fa fa-phone"></i> @ViewBag.Contact</p>
					<p class="social-media">
						<a href="#"><i class="fa fa-facebook"></i></a>
						<a href="#"><i class="fa fa-twitter"></i></a>
						<a href="#"><i class="fa fa-google-plus"></i></a>
						<a href="#"><i class="fa fa-instagram"></i></a>
					</p>
				</div>
				<div class="clearfix visible-sm-block"></div>
				<div class="col-md-3 col-sm-6 footer-gallery">
					<h4>GALLERY</h4>
					<img src="../Images/camp1.jpg" alt="cruise" style="width:80px;height:60px">
					<img src="../Images/camp2.jpg" alt="cruise" style="width:80px;height:60px">
					<img src="../Images/camp3.jpg" alt="cruise" style="width:80px;height:60px">
					<img src="../Images/camp1.jpg" alt="cruise" style="width:80px;height:60px">
					<img src="../Images/camp2.jpg" alt="cruise" style="width:80px;height:60px">
					<img src="../Images/camp3.jpg" alt="cruise" style="width:80px;height:60px">
				</div>
				<div class="col-md-3 col-sm-6 footer-subscribe">
					<h4>SUBSCRIBE</h4>
					<p>Don't miss any deal. Subscribe to get offers alerts.</p>
					<form>
						<div class="col-md-10 col-sm-10 col-xs-9 clear-padding">
							<input type="email" required="" class="form-control" placeholder="Enter Your Email">
						</div>
						<div class="col-md-2 col-sm-2 col-xs-3 clear-padding">
							<button type="submit"><i class="fa fa-paper-plane"></i></button>
						</div>
					</form>	
				</div>
			</div>
		</div>
		<div class="clearfix"></div>
		<div class="row sm-footer-nav text-center">
			<p>
				<a href="#">HOME</a>
				<a href="#">ROOM</a>
				<a href="#">SERVICE</a>
				<a href="#">GALLERY</a>
			</p>
			<p class="copyright">
				<i class="fa fa-copyright"></i>	2017 THE CAMP HORIZON ALL RIGHTS RESERVED
			</p>
			<div class="go-up">
				<a href="#"><i class="fa fa-arrow-up"></i></a>
			</div>
		</div>
	</footer>
</section>
</body>
</html>

PortalConfigurationsController.cs
======================================
[Authorize]
    public class PortalConfigurationsController : BaseController
    {
        //
        // GET: /PortalConfigurations/
        CommonHelper _commonHelper;
        public ActionResult Index()
        {
            _commonHelper = new CommonHelper();
           
            return View(_commonHelper.GetHomeConfiguration());
        }

        [HttpPost]
        public ActionResult Index(WebPortalConfigurationsViewModel model) {

            _commonHelper = new CommonHelper();

            if (_commonHelper.UpdateHomeConfiguration(model))
            {
                Success("The home configurations updated successfully.",true);
            }
            else {
                Danger("The home configurations not updated successfully.", true);
            }

            return View();
        }
           
        }

BaseController.cs
=============================

 public class BaseController : Controller
    {
        //
        // GET: /Base/
        public camphorizonEntities db;
        public BaseController() {
            db = new camphorizonEntities();
            var contactDetails = db.ApplicationSettings.Where(x=>x.Type == "Contact").ToList();
            ViewBag.Contact = contactDetails.Where(x => x.Name == "Helpline").FirstOrDefault().Value;
            ViewBag.HelpEmail = contactDetails.Where(x => x.Name == "HelpEmail").FirstOrDefault().Value;
            ViewBag.Address = contactDetails.Where(x => x.Name == "Address").FirstOrDefault().Value;
            db = null;
        }

        public void Success(string message, bool dismissable = false)
        {
            AddAlert(AlertStyles.Success, message, dismissable);
        }

        public void Information(string message, bool dismissable = false)
        {
            AddAlert(AlertStyles.Information, message, dismissable);
        }

        public void Warning(string message, bool dismissable = false)
        {
            AddAlert(AlertStyles.Warning, message, dismissable);
        }

        public void Danger(string message, bool dismissable = false)
        {
            AddAlert(AlertStyles.Danger, message, dismissable);
        }

        private void AddAlert(string alertStyle, string message, bool dismissable)
        {
            var alerts = TempData.ContainsKey(Alert.TempDataKey)
                ? (List<Alert>)TempData[Alert.TempDataKey]
                : new List<Alert>();

            alerts.Add(new Alert
            {
                AlertStyle = alertStyle,
                Message = message,
                Dismissable = dismissable
            });

            TempData[Alert.TempDataKey] = alerts;
        }
    }
	
Alert.cs
====================================

public class Alert
    {
        public const string TempDataKey = "TempDataAlerts";

        public string AlertStyle { get; set; }
        public string Message { get; set; }
        public bool Dismissable { get; set; }
    }

    public static class AlertStyles
    {
        public const string Success = "success";
        public const string Information = "info";
        public const string Warning = "warning";
        public const string Danger = "danger";
    }
    
CommonHelper.cs
==============================
 public class CommonHelper
    {
       public WebPortalConfigurationsViewModel GetHomeConfiguration()
        {

            using (camphorizonEntities db = new camphorizonEntities())
            {

                var config = db.ApplicationSettings.Where(c => c.Type == "Contact").ToList();
                return new WebPortalConfigurationsViewModel()
                {
                    Address = config.Where(x => x.Name == "Address").FirstOrDefault().Value,
                    Contact = config.Where(x => x.Name == "Helpline").FirstOrDefault().Value,
                    HelpEmail = config.Where(x => x.Name == "HelpEmail").FirstOrDefault().Value
                };
            }

        }

       public bool UpdateHomeConfiguration(WebPortalConfigurationsViewModel model)
       {
           using (camphorizonEntities db = new camphorizonEntities())
           {
               var config = db.ApplicationSettings.Where(x => x.Name == "Address").FirstOrDefault();
               config.Value = model.Address;
               db.Entry(config).State = System.Data.Entity.EntityState.Modified;
               db.SaveChanges();

               config = db.ApplicationSettings.Where(x => x.Name == "Helpline").FirstOrDefault();
               config.Value = model.Contact;
               db.Entry(config).State = System.Data.Entity.EntityState.Modified;
               db.SaveChanges();

               config = db.ApplicationSettings.Where(x => x.Name == "HelpEmail").FirstOrDefault();
               config.Value = model.HelpEmail;
               db.Entry(config).State = System.Data.Entity.EntityState.Modified;
               db.SaveChanges();

               return true;
           }

           
       }
    }
    
    PortalConfig-Index.cshtml
    ================================
    
        ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayoutMaster.cshtml";
}
@model Camphorizon.Web.ViewModels.WebPortalConfigurationsViewModel
<h2>Portal Configurations</h2>

<hr />
<ol class="breadcrumb">
    <li><a href="@Url.Action("Index","Administrator")">Home</a></li>
    <li class="active">Web Portal Configuration</li>
</ol>
<div class="row">
    <div class="col-md-10 col-lg-10 col-xs-10 col-sm-10">
        @using (Html.BeginForm("Index", "PortalConfigurations", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            
                <div class="form-group">
                    <label class="col-sm-3 control-label">Support Email</label>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(m => m.HelpEmail, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">Contact/Helpline Number</label>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(m => m.Contact, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">Address</label>
                    <div class="col-sm-8">
                        @Html.TextAreaFor(m => m.Address, new { @class = "form-control", @rows = "5" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-offset-3 col-sm-8">
                        <button type="submit" class="btn btn-primary"><i class="fa fa-check"></i> Update</button>
                    </div>
                </div>
            
        }
        
    </div>
</div>

_AdminLayoutMaster.cshtml
======================================

<div class="row topMargin">
        <div class="col-md-12">
            <div class="col-md-3 rightBorder">

                <h4 class="text-center text-capitalize text-info">Menu </h4>
               
                <ul class="list-group">
                    <li class="list-group-item"><a href="@Url.Action("Index","BookingRequests")">Booking Requests</a> </li>
                    <li class="list-group-item"><a href="@Url.Action("Index","Packages")">Packages</a></li>
                    <li class="list-group-item"><a href="@Url.Action("Index","Slider")">Advertisements</a></li>
                    <li class="list-group-item"><a href="@Url.Action("Index","Offers")">Testimonials</a></li>
                    <li class="list-group-item"><a href="@Url.Action("Index","Gallery")">Gallery</a></li>
                    <li class="list-group-item"><a href="@Url.Action("Index","PortalConfigurations")">Web Portal Configurations</a></li>
                </ul>
            </div>
            <div class="col-md-9">
                <div class="row">
                    <div class="col-md-12">
                        @Html.Partial("_PartialAlerts")
                    </div>
                </div>
                @RenderBody()
            </div>
        </div>
</div>
DBQueris.sql
===================

CREATE TABLE [dbo].[Packages]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	[Name]	varchar(256),
	[Description] nvarchar(max),
	[Price] decimal(8,2),
	[Active] bit,
	[Duration] smallint,
	[CreatedDate] datetime,
	[UpdatedDate] datetime,
	[CreatedBy] varchar(30),
	[UpdatedBy] varchar(30)
)

CREATE TABLE [dbo].[PackageInclusions]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	[PackageID] int,
	[Inclusions] nvarchar(max),
	[CreateDate] datetime,
	[UpdateDate] datetime,
	[CreatedBy] varchar(30),
	[UpdatedBy] varchar(30), 
    CONSTRAINT [FK_PackageInclusions_Packages] FOREIGN KEY ([PackageID]) REFERENCES [Packages]([ID])
)


CREATE TABLE [dbo].[PackageExclusions]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	[PackageID] int,
	[Exclusions] nvarchar(max),
	[CreateDate] datetime,
	[UpdateDate] datetime,
	[CreatedBy] varchar(30),
	[UpdatedBy] varchar(30), 
    CONSTRAINT [FK_PackageExclusions_Packages] FOREIGN KEY ([PackageID]) REFERENCES [Packages]([ID])
)



CREATE TABLE [dbo].[PackageItinerary]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	[PackageID] int,
	[Itinerary] nvarchar(max),
	[CreateDate] datetime,
	[UpdateDate] datetime,
	[CreatedBy] varchar(30),
	[UpdatedBy] varchar(30), 
	CONSTRAINT [FK_PackageItinerary_Packages] FOREIGN KEY ([PackageID]) REFERENCES [Packages]([ID])
)

CREATE TABLE [dbo].[CancellationTerms]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
    [CancellationTerm] NVARCHAR(MAX) NULL
)

CREATE TABLE [dbo].[PackageCancellationTermsMappings]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	[PackageID] int,
	[CancellationTermID] int, 
    CONSTRAINT [FK_PackageCancellationTermsMappings_Packages] FOREIGN KEY ([PackageID]) REFERENCES [Packages]([ID])

)

CREATE TABLE [dbo].[Facilities]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
    [Facility] NVARCHAR(200) NULL
)

CREATE TABLE [dbo].[PackageFacilityMapping]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1), 
	[PackageID] int,
	[FacilityID] int, 
    CONSTRAINT [FK_PackageFacilityMapping_ToTable] FOREIGN KEY ([PackageID]) REFERENCES [Packages]([ID])
)

CREATE TABLE [dbo].[ApplicationSettings]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	[Type] varchar(50),
	[Name] varchar(50),
	[Value] varchar(1000)
)
Insert into ApplicationSettings
values
('Contact','Helpline','+91-8860795399')

Insert into ApplicationSettings
values
('Contact','HelpEmail','info@camphorizon.com')
Insert into ApplicationSettings
values
('Contact','Address','xyz, abc street, India')

10-Aug-2017
===================

ImageController.cs
-------------------------

[Authorize]
    public class ImageController : BaseController
    {
        //
        // GET: /Images/
        

        public ActionResult Index()
        {
            _commonHelper = new Helpers.CommonHelper();
            var lstImages = _commonHelper.GetUploadedImages();
            return View(lstImages);
        }

        public ActionResult Upload()
        {
            var model = new ImageUploadViewModel();
            _commonHelper = new Helpers.CommonHelper();
            model.ImageTypes = _commonHelper.GetImageTypes();
            _commonHelper = null;
            return View(model);
        }

        [HttpPost]
        public ActionResult Upload(ImageUploadViewModel model)
        {
            
            if (model.Images.Count() > 0)
            {
                _commonHelper = new Helpers.CommonHelper();
                model.ImageTypes = _commonHelper.GetImageTypes();
                if (_commonHelper.UploadImages(model) > 0)
                {
                    Success("The image(s) upload completed successfully.",true);
                    return View(model);
                }
                else
                {
                    Danger("The image(s) can not be uploaded.", true);
                }
            }
            else {
                Danger("Please select a file(s) to upload.", true);
            }
            
            return View(model);
        }


        
        
    }
    
    Image -Index.cshtml
    ================================
    
    @{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayoutMaster.cshtml";
}
@using GridMvc.Html
@model List<Camphorizon.Web.ViewModels.ImageUploadViewModel>
<h2>Uploaded Images</h2>
<hr />
<ol class="breadcrumb">
    <li><a href="@Url.Action("Index","Administrator")">Home</a></li>
    <li class="active">Uploaded Images</li>
</ol>
<div class="row">
    <div class="col-md-12">
      
        @Html.Grid(Model).Columns(columns =>
{
    columns.Add(data => data.ImageID).Titled("ID");
    columns.Add(data => data.Name).Titled("Name");
    columns.Add(data => data.Status).Titled("Status").Sortable(true);
    columns.Add()
        .Titled("Actions")
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(30)
        .RenderValueAs(o => @<a href="@Url.Action("Edit", "Image", new { id = o.ImageID })" class="btn btn-info">Edit <i class="fa fa-edit"></i></a>);
}).WithPaging(20)
        <hr />
        <a href="@Url.Action("Upload","Image")" class="btn btn-primary"><i class="fa fa-plus"></i> Add New Image </a>

    </div>
</div>

Image - Upload.cshtml
=============================

@{
    ViewBag.Title = "Upload";
    Layout = "~/Views/Shared/_AdminLayoutMaster.cshtml";
}
@model Camphorizon.Web.ViewModels.ImageUploadViewModel
<h2>Upload Images</h2>

<hr />
<ol class="breadcrumb">
    <li><a href="@Url.Action("Index","Administrator")">Home</a></li>
    <li class="active">Upload Images</li>
</ol>
<div class="row">
    <div class="col-md-10 col-lg-10 col-xs-10 col-sm-10">
        @using (Html.BeginForm("Upload", "Image", FormMethod.Post, new { @class = "form-horizontal" , @enctype = "multipart/form-data" }))
        {

            <div class="form-group">
                <label class="col-sm-3 control-label">Image Title</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Image For</label>
                <div class="col-sm-8">
                    @Html.DropDownListFor(m => m.ImageType,Model.ImageTypes, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Offer Display Text</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.OfferHeading, new { @class = "form-control" })
                </div>
            </div>

    <div class="form-group">
        <label class="col-sm-3 control-label">Offer Details</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.OfferDetails, new { @class = "form-control"})
        </div>
    </div>

    <div class="form-group">
        <label class="col-sm-3 control-label">Select Image(s)</label>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.Images, new { @type = "file"})
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-3 control-label">Active</label>
        <div class="col-sm-8">
            @Html.CheckBoxFor(m => m.Active)
        </div>
    </div>
            <div class="form-group">
                <div class="col-sm-offset-3 col-sm-8">
                    <button type="submit" class="btn btn-primary"><i class="fa fa-upload"></i> Upload</button>
                </div>
            </div>

        }

        <hr />
        <a href="@Url.Action("Index","Image")" class="btn btn-danger"><i class="fa fa-backward"></i> Back to queue</a>
    </div>
</div>

CommonHelper.cs
========================

public class CommonHelper
    {
       public WebPortalConfigurationsViewModel GetHomeConfiguration()
        {

            using (camphorizonEntities db = new camphorizonEntities())
            {

                var config = db.ApplicationSettings.Where(c => c.Type == "Contact").ToList();
                return new WebPortalConfigurationsViewModel()
                {
                    Address = config.Where(x => x.Name == "Address").FirstOrDefault().Value,
                    Contact = config.Where(x => x.Name == "Helpline").FirstOrDefault().Value,
                    HelpEmail = config.Where(x => x.Name == "HelpEmail").FirstOrDefault().Value
                };
            }

        }

       public bool UpdateHomeConfiguration(WebPortalConfigurationsViewModel model)
       {
           using (camphorizonEntities db = new camphorizonEntities())
           {
               var config = db.ApplicationSettings.Where(x => x.Name == "Address").FirstOrDefault();
               config.Value = model.Address;
               db.Entry(config).State = System.Data.Entity.EntityState.Modified;
               db.SaveChanges();

               config = db.ApplicationSettings.Where(x => x.Name == "Helpline").FirstOrDefault();
               config.Value = model.Contact;
               db.Entry(config).State = System.Data.Entity.EntityState.Modified;
               db.SaveChanges();

               config = db.ApplicationSettings.Where(x => x.Name == "HelpEmail").FirstOrDefault();
               config.Value = model.HelpEmail;
               db.Entry(config).State = System.Data.Entity.EntityState.Modified;
               db.SaveChanges();

               return true;
           }

           
       }

       public SelectList GetImageTypes()
       {
           using (camphorizonEntities db = new camphorizonEntities()) {

               return new SelectList(db.ApplicationSettings.Where(x => x.Type == "ImageTypes" && x.Name != "Package").Select(x => new { ID = x.Value, Name = x.Name }).ToList(),"ID","Name");
           }
       
       }

       
       public int UploadImages(ImageUploadViewModel model)
       {
           string uploadDirectory = ConfigurationManager.AppSettings["UploadDirectoryImages"].ToString();
           using (camphorizonEntities db = new camphorizonEntities()) {
               var order = db.ImagesCatalogues.Where(x => x.ImageFor == model.ImageType).Max(x => x.SlideOrder);
               int lastOrder = order.HasValue ? order.Value : 0;
               foreach (var img in model.Images)
               {
                   string uploadFileLink = UploadFile(img, uploadDirectory);
                  lastOrder++;
                   db.ImagesCatalogues.Add(new ImagesCatalogue()
                   {
                       Active = model.Active,
                       ImageFor = model.ImageType,
                       ImageLink = uploadFileLink,
                       Name = model.Name,
                       OfferDetails = model.OfferDetails,
                       OfferHeading = model.OfferHeading,
                       SlideOrder = (short)lastOrder
                   });
                  

               }

               return db.SaveChanges();
           }
       }

       public string UploadFile(HttpPostedFileBase file, string uploadDirectory)
       {
           if (file.ContentLength > 0)
           {
               var fileName = Path.GetFileName(file.FileName);
               string path = Path.Combine(HttpContext.Current.Server.MapPath(uploadDirectory), fileName);
               file.SaveAs(path);
               return uploadDirectory + "/" + fileName;
           }

           return string.Empty;
       }

       public List<ImageUploadViewModel> GetUploadedImages() {
           using (camphorizonEntities db = new camphorizonEntities()) {
               var lstImageIDs = db.ImagesCatalogues.Where(x => x.ImageFor.Value != 1 || x.ImageFor.Value != 4).Select(x=>x.Id).ToList();
              List<ImageUploadViewModel> lstImages= new List<ImageUploadViewModel>();
              foreach (var imgID in lstImageIDs)
              {
                  lstImages.Add(GetUploadedImage(imgID,db));   
              }
              return lstImages;
           }
       }

       public ImageUploadViewModel GetUploadedImage(int id, camphorizonEntities db, bool isDetails = false)
       {

           return new ImageUploadViewModel(db.ImagesCatalogues.Where(x => x.Id == id).First(),isDetails);
       
       }
    }
    
    ImageUploadViewModel.cs
    ==============================
    
    public class ImageUploadViewModel
    {
        public int ImageID { get; set; }
        public string Name { get; set; }
        public string OfferHeading { get; set; }
        public string OfferDetails { get; set; }
        public short ImageType { get; set; }
        public string ImageTypeName { get; set; }
        public SelectList ImageTypes { get; set; }
        public string Imagelink { get; set; }
        public HttpPostedFileBase [] Images { get; set; }
        public bool Active { get; set; }
        public string Status { get; set; }
        public int Order { get; set; }

        public ImageUploadViewModel() { }

        public ImageUploadViewModel(ImagesCatalogue model, bool isDetail =false)
        {
            this.ImageID = model.Id;
            this.Name = model.Name;
            this.Status = model.Active.Value?"Active":"Non-Active";
            if(isDetail){
                this.Order = (int)model.SlideOrder;
                this.OfferHeading = model.OfferHeading;
                this.OfferDetails = model.OfferDetails;
                this.ImageTypeName = model.ImageFor == 1 ? "Package" : model.ImageFor == 2 ? "Slider" : model.ImageFor == 3 ? "Gallery" : "Room";
                this.ImageType = (short) model.ImageFor;
                this.Imagelink = model.ImageLink;
                this.Active = model.Active.HasValue?model.Active.Value:false;
            }
            
        }
    }
    
    _AdminLayoutMaster.cshtml
    ====================================
    @{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}

    <div class="row topMargin">
        <div class="col-md-12">
            <div class="col-md-3 rightBorder">

                <h4 class="text-center text-capitalize text-info">Menu </h4>
               
                <ul class="list-group">
                    <li class="list-group-item"><a href="@Url.Action("Index","BookingRequests")">Booking Requests</a> </li>
                    <li class="list-group-item"><a href="@Url.Action("Index","Packages")">Packages</a></li>
                    <li class="list-group-item"><a href="@Url.Action("Index","Image")">Upload Images</a></li>
                    <li class="list-group-item"><a href="@Url.Action("Index","Offers")">Testimonials</a></li>
                    <li class="list-group-item"><a href="@Url.Action("Index","Gallery")">Gallery</a></li>
                    <li class="list-group-item"><a href="@Url.Action("Index","PortalConfigurations")">Web Portal Configurations</a></li>
                </ul>
            </div>
            <div class="col-md-9">
                <div class="row">
                    <div class="col-md-12">
                        @Html.Partial("_PartialAlerts")
                    </div>
                </div>
                @RenderBody()
            </div>
        </div>
</div>

web.config
=====================

 <add key="UploadDirectoryImages" value="~/Uploads/" />
 
 DBQueries.sql
 ========================
 
 CREATE TABLE [dbo].[Packages]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	[Name]	varchar(256),
	[Description] nvarchar(max),
	[Price] decimal(8,2),
	[Active] bit,
	[Duration] smallint,
	[CreatedDate] datetime,
	[UpdatedDate] datetime,
	[CreatedBy] varchar(30),
	[UpdatedBy] varchar(30)
)

CREATE TABLE [dbo].[PackageInclusions]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	[PackageID] int,
	[Inclusions] nvarchar(max),
	[CreateDate] datetime,
	[UpdateDate] datetime,
	[CreatedBy] varchar(30),
	[UpdatedBy] varchar(30), 
    CONSTRAINT [FK_PackageInclusions_Packages] FOREIGN KEY ([PackageID]) REFERENCES [Packages]([ID])
)


CREATE TABLE [dbo].[PackageExclusions]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	[PackageID] int,
	[Exclusions] nvarchar(max),
	[CreateDate] datetime,
	[UpdateDate] datetime,
	[CreatedBy] varchar(30),
	[UpdatedBy] varchar(30), 
    CONSTRAINT [FK_PackageExclusions_Packages] FOREIGN KEY ([PackageID]) REFERENCES [Packages]([ID])
)



CREATE TABLE [dbo].[PackageItinerary]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	[PackageID] int,
	[Itinerary] nvarchar(max),
	[CreateDate] datetime,
	[UpdateDate] datetime,
	[CreatedBy] varchar(30),
	[UpdatedBy] varchar(30), 
	CONSTRAINT [FK_PackageItinerary_Packages] FOREIGN KEY ([PackageID]) REFERENCES [Packages]([ID])
)

CREATE TABLE [dbo].[CancellationTerms]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
    [CancellationTerm] NVARCHAR(MAX) NULL
)

CREATE TABLE [dbo].[PackageCancellationTermsMappings]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	[PackageID] int,
	[CancellationTermID] int, 
    CONSTRAINT [FK_PackageCancellationTermsMappings_Packages] FOREIGN KEY ([PackageID]) REFERENCES [Packages]([ID])

)

CREATE TABLE [dbo].[Facilities]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
    [Facility] NVARCHAR(200) NULL
)

CREATE TABLE [dbo].[PackageFacilityMapping]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1), 
	[PackageID] int,
	[FacilityID] int, 
    CONSTRAINT [FK_PackageFacilityMapping_ToTable] FOREIGN KEY ([PackageID]) REFERENCES [Packages]([ID])
)

CREATE TABLE [dbo].[ApplicationSettings]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	[Type] varchar(50),
	[Name] varchar(50),
	[Value] varchar(1000)
)
Insert into ApplicationSettings
values
('Contact','Helpline','+91-8860795399')

Insert into ApplicationSettings
values
('Contact','HelpEmail','info@camphorizon.com')
Insert into ApplicationSettings
values
('Contact','Address','xyz, abc street, India')


CREATE TABLE [dbo].[ImagesCatalogue]
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	[Name] varchar(100),
	[OfferHeading] varchar(200),
	[OfferDetails] varchar(200),
	[ImageLink] varchar(256),
	[ImageFor] smallint,
	[PackageID] int NULL,
	[SlideOrder] smallint,
	[Active] bit
)


Insert into ApplicationSettings
values
('ImageTypes','Package','1')

Insert into ApplicationSettings
values
('ImageTypes','Slider','2')

Insert into ApplicationSettings
values
('ImageTypes','Gallery','3')

Insert into ApplicationSettings
values
('ImageTypes','Room','4')

BaseController.cs
=======================

public class BaseController : Controller
    {
        //
        // GET: /Base/
        public camphorizonEntities db;
        public CommonHelper _commonHelper;
        public BaseController() {
            db = new camphorizonEntities();
            var contactDetails = db.ApplicationSettings.Where(x=>x.Type == "Contact").ToList();
            ViewBag.Contact = contactDetails.Where(x => x.Name == "Helpline").FirstOrDefault().Value;
            ViewBag.HelpEmail = contactDetails.Where(x => x.Name == "HelpEmail").FirstOrDefault().Value;
            ViewBag.Address = contactDetails.Where(x => x.Name == "Address").FirstOrDefault().Value;
            db = null;
        }

        public void Success(string message, bool dismissable = false)
        {
            AddAlert(AlertStyles.Success, message, dismissable);
        }

        public void Information(string message, bool dismissable = false)
        {
            AddAlert(AlertStyles.Information, message, dismissable);
        }

        public void Warning(string message, bool dismissable = false)
        {
            AddAlert(AlertStyles.Warning, message, dismissable);
        }

        public void Danger(string message, bool dismissable = false)
        {
            AddAlert(AlertStyles.Danger, message, dismissable);
        }

        private void AddAlert(string alertStyle, string message, bool dismissable)
        {
            var alerts = TempData.ContainsKey(Alert.TempDataKey)
                ? (List<Alert>)TempData[Alert.TempDataKey]
                : new List<Alert>();

            alerts.Add(new Alert
            {
                AlertStyle = alertStyle,
                Message = message,
                Dismissable = dismissable
            });

            TempData[Alert.TempDataKey] = alerts;
        }
    }
    
11-Aug-2017
===================
PackageViewModel.cs
=======-------------
public class PackageViewModel
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public decimal Price { get; set; }
        public short Duration { get; set; }
        public bool Active { get; set; }
        public string Itinerary { get; set; }
        public string Inclusions { get; set; }
        public string Exclusions { get; set; }
        public int PackageType { get; set; }
        public SelectList PackageTypes { get; set; }
    }
    
  Package-Create
  ========================
  
  @{
    ViewBag.Title = "Create Package";
    Layout = "~/Views/Shared/_AdminLayoutMaster.cshtml";
}
<link href="~/Content/kendo/2017.2.621/kendo.common.core.min.css" rel="stylesheet" />
@*<link href="~/Content/kendo/2017.2.621/kendo.common.min.css" rel="stylesheet" />*@
<link href="~/Content/kendo/2017.2.621/kendo.default.min.css" rel="stylesheet" />
<link href="~/Content/kendo/2017.2.621/kendo.default.mobile.min.css" rel="stylesheet" />

@*<script src="~/Scripts/kendo/2017.2.621/kendo.core.min.js"></script>*@
<script src="~/Scripts/kendo/2017.2.621/kendo.ui.core.min.js"></script>
@model Camphorizon.Web.ViewModels.PackageViewModel
<h2>Create Package <i class="fa fa-suitcase"></i></h2>

<hr />
<ol class="breadcrumb">
    <li><a href="@Url.Action("Index","Administrator")">Home</a></li>
    <li class="active">Create Packages/Rooms</li>
</ol>
<div class="row">
    <div class="col-md-10 col-lg-10 col-xs-10 col-sm-10">
        @using (Html.BeginForm("Create", "Package", FormMethod.Post, new { @class = "form-horizontal"}))
        {

            <div class="form-group">
                <label class="col-sm-3 control-label">Name</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Package Type</label>
                <div class="col-sm-8">
                    @Html.DropDownListFor(m => m.PackageType, Model.PackageTypes, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Description</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label">Package Duration</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.Duration, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label">Itinerary</label>
                <div class="col-sm-8">
                    @Html.TextAreaFor(m => m.Itinerary)
                </div>
            </div>
    
    <div class="form-group">
        <label class="col-sm-3 control-label">Inclusions</label>
        <div class="col-sm-8">
            @Html.TextAreaFor(m => m.Inclusions, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-3 control-label">Exclusions</label>
        <div class="col-sm-8">
            @Html.TextAreaFor(m => m.Exclusions, new { @class = "form-control" })
        </div>
    </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Active</label>
                <div class="col-sm-8">
                    @Html.CheckBoxFor(m => m.Active)
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-3 col-sm-8">
                    <button type="submit" class="btn btn-primary"><i class="fa fa-upload"></i> Upload</button>
                </div>
            </div>

        }

        <hr />
        <a href="@Url.Action("Index","Image")" class="btn btn-danger"><i class="fa fa-backward"></i> Back to queue</a>
    </div>
</div>

<script>
    $(document).ready(function () {
        // create Editor from textarea HTML element with default set of tools
        $("#Itinerary").kendoEditor({
            resizable: {
                content: true,
                toolbar: true
            }
        });
    });
</script>

PackageController.cs
=============================
[Authorize]
    public class PackagesController : BaseController
    {
        //
        // GET: /Packages/

        public ActionResult Index()
        {
            
            return View();
        }

        public ActionResult Create()
        {
            _commonHelper = new CommonHelper();
            var model = new PackageViewModel();
            model.PackageTypes = _commonHelper.GetPackageTypes();
            return View(model);
        }

        [HttpPost]
        public ActionResult Create(PackageViewModel model) {

            return View();
        }
    }
    
    
    CommonHelper.cs
    =======================
    
       public SelectList GetPackageTypes()
       {
           using (camphorizonEntities db = new camphorizonEntities())
           {

               return new SelectList(db.ApplicationSettings.Where(x => x.Type == "PackageType").Select(x => new { ID = x.Value, Name = x.Name }).ToList(), "ID", "Name");
           }
       
       }
       
Package -Index
================

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayoutMaster.cshtml";
}

<h2>Index</h2>

<a href="@Url.Action("Create","Packages")" class="btn btn-primary"><i class="fa fa-plus"></i> Add New Package/Room </a>

DBQueries.sql
================
Insert into ApplicationSettings values
('PackageType','Tour Package','1')
Insert into ApplicationSettings values
('PackageType','Room Package','2')

_PartialHomeSlider.cshtml
============================
@{
    
    int count = 0;
    int slide = 0;
}
@if (ViewBag.SliderImages != null)
{
   
    <div id="myCarousel" class="carousel slide" data-ride="carousel">
         <!-- Indicators -->
        <ol class="carousel-indicators">
            @foreach (var img in ViewBag.SliderImages)
            {

                <li data-target="#myCarousel" data-slide-to="@count" class="active"></li>
                count++;
            }
        </ol>


        <!-- Wrapper for slides -->
      
        <div class="carousel-inner">
@foreach (var img in ViewBag.SliderImages)
{
    if (slide == 0)
    {       <div class="item active">
        <img src="@Url.Content(img.ImageLink)" style="width:100%; height:650px" />
    </div>
    }
    else
    {
        <div class="item">
            <img src="@Url.Content(img.ImageLink)" style="width:100%; height:650px" />
        </div>
    }

    slide++;

}
        </div>
        <!-- Left and right controls -->
        <a class="left carousel-control" href="#myCarousel" data-slide="prev">
            <span class="glyphicon glyphicon-chevron-left"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="right carousel-control" href="#myCarousel" data-slide="next">
            <span class="glyphicon glyphicon-chevron-right"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>
}


Home - Index
===================

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}

@Html.Partial("_PartialHomeSlider")
<hr />
  <div class="jumbotron jumbotronBack">
  <h1>The Camp Horizon</h1>
  <p>Welcome to our website. More text about camp horizon.</p>
  <p><a  class="btn btn-primary btn-lg">Know more</a></p>
</div>
<hr />

<div class="container-fluid">
  <h1 class="text-center"> WE ARE OFFERING THE HOTTEST OFFERS</h1>
  <div class="row">
      <div class="col-md-3">
         
  <div class="well text-center">
 <img src="~/Images/luxurytent.jpg" class ="img-responsive"  />
      <h3 class="text-primary">Bag Packer</h3>
     <h4> <i class="fa fa-inr"> </i> 5700 per person</h4> 
      <a href="#" class="btn btn-default"> Explore <i class="fa fa-search"> </i></a>
<a href="#" class="btn btn-primary">Ping Us <i class="fa fa-send"> </i></a>
  </div>

      </div>
      <div class="col-md-3">
          <div class="well text-center">
 <img src="~/Images/luxurytent.jpg" class ="img-responsive"  />
      <h3 class="text-primary">Standard</h3>
     <h4> <i class="fa fa-inr"> </i> 5700 per person</h4> 
      <a href="#" class="btn btn-default"> Explore <i class="fa fa-search"> </i></a>
<a href="#" class="btn btn-primary">Ping Us <i class="fa fa-send"> </i></a>
  </div>
      </div>
      <div class="col-md-3">
          <div class="well text-center">
 <img src="~/Images/luxurytent.jpg" class ="img-responsive"  />
      <h3 class="text-primary">Deluxe</h3>
     <h4> <i class="fa fa-inr"> </i> 5700 per person</h4> 
      <a href="#" class="btn btn-default"> Explore <i class="fa fa-search"> </i></a>
<a href="#" class="btn btn-primary">Ping Us <i class="fa fa-send"> </i></a>
  </div>
      </div>
      <div class="col-md-3">
          <div class="well text-center">
 <img src="~/Images/luxurytent.jpg" class ="img-responsive"  />
      <h3 class="text-primary">Luxury</h3>
     <h4> <i class="fa fa-inr"> </i> 5700 per person</h4> 
      <a href="#" class="btn btn-default"> Explore <i class="fa fa-search"> </i></a>
<a href="#" class="btn btn-primary">Ping Us <i class="fa fa-send"> </i></a>
  </div>
      </div>
  </div>
      
</div>

<div id="facilities">
    <div class="wrapper">
        <h2 class="whiteColor text-center">OUR FACILITIES</h2>
        <div class="col-md-10 col-md-offset-1">
            <div class="col-md-6" id="image1">
             
               <div class="container col-md-12">
 
  <div class="content">
   
      <div class="content-overlay"></div>
      <img class="content-image" src="~/Images/hotel-facility1.jpg" style="height:340px">
      <div class="content-details fadeIn-bottom">
        <h3 class="content-title">ADVENTURE ACTIVITIES</h3>
        <p class="content-text">This is a short description</p>
          <button class="btn btn-info">EXPLORE <i class="fa fa-search"></i> </button>
      </div>
  
  </div>
</div> 
            </div>
            <div class="col-md-6" id="image2">
              
               <div class="container col-md-12">
 
  <div class="content">
   
      <div class="content-overlay"></div>
      <img class="content-image" src="~/Images/hotel-facility2.jpg">
      <div class="content-details fadeIn-bottom">
        <h3 class="content-title">LEISURELY TIME</h3>
        <p class="content-text">This is a short description</p>
 <button class="btn btn-info">EXPLORE <i class="fa fa-search"></i> </button>
      </div>
  
  </div>
</div> 
            </div>
            </div>
        <div class="col-md-10 col-md-offset-1" style="padding-top:10px">
            <div class="col-md-6" id="image3">
              
               <div class="container col-md-12">
 
  <div class="content">
   
      <div class="content-overlay"></div>
      <img class="content-image" src="~/Images/hotel-facility3.jpg">
      <div class="content-details fadeIn-bottom">
        <h3 class="content-title">GREAT FOOD</h3>
        <p class="content-text">This is a short description</p>
           <button class="btn btn-info">EXPLORE <i class="fa fa-search"></i> </button>
      </div>
  
  </div>
</div> 
            </div>
            <div class="col-md-6" id="image4">
              
                           <div class="container col-md-12">
 
              <div class="content">
   
                  <div class="content-overlay"></div>
                  <img class="content-image" src="~/Images/hotel-facility4.jpg">
                  <div class="content-details fadeIn-bottom">
                    <h3 class="content-title">This is a title</h3>
                    <p class="content-text">This is a short description</p>
 <button class="btn btn-info">EXPLORE <i class="fa fa-search"></i> </button>
                  </div>
  
              </div>
            </div> 
                        </div>
           
        </div>
    </div>
</div>
<hr />
   <div class="well-searchbox">
                <form class="form-horizontal" role="form">
                    <legend style="color:#fff">
                       Make a reservation
                    </legend>
                    <div class="form-group has-feedback">
                        <label class="col-md-4 control-label"> Check-in</label>
                        <div class="col-md-8">
                            <i class="fa fa-calendar form-control-feedback"></i>
                            <input type="date" class="form-control " placeholder="">
                            
                        </div>
                    </div>

                   <div class="form-group has-feedback">
                        <label class="col-md-4 control-label"> Check-out</label>
                        <div class="col-md-8">
                              <i class="fa fa-calendar form-control-feedback"></i>
                            <input type="date" class="form-control" placeholder="">
                        </div>
                    </div>

                     <div class="form-group">
                        <label class="col-md-4 control-label"> Adults</label>
                        <div class="col-md-8">
                            <input type="number" class="form-control" placeholder="">
                        </div>
                    </div>

                     <div class="form-group">
                        <label class="col-md-4 control-label"> Children</label>
                        <div class="col-md-8">
                            <input type="number" class="form-control" placeholder="">
                        </div>
                    </div>

                    
                    <div class="col-sm-offset-4 col-sm-5">
                        <button type="submit" class="btn btn-success">Search <i class="fa fa-search"></i></button>
                    </div>
                </form>
            </div>
<div class="container-fluid" id="testimonials">
  <h1 class="text-center whiteColor"> HAPPY CUSTOMERS</h1>
  
     <div class="container">
         <div class="col-md-4">
  <img src="~/Images/customer.jpg" alt="Avatar" class="img-responsive" >
             </div>
         <div class="col-md-8">
  <blockquote>
  <p>
    Testimonial text Testimonial text Testimonial text Testimonial text Testimonial text Testimonial text Testimonial text.
Testimonial text Testimonial text Testimonial text Testimonial text Testimonial text Testimonial text Testimonial text.
Testimonial text Testimonial text Testimonial text Testimonial text Testimonial text Testimonial text Testimonial text.
    <br>
    <em>– ABC Sharma</em>
  </p>
</blockquote>
             </div>
</div>

<div class="container ">
         <div class="col-md-4">
  <img src="~/Images/customer.jpg" alt="Avatar" class="img-responsive" >
             </div>
         <div class="col-md-8">
  <blockquote>
  <p>
    Testimonial text Testimonial text Testimonial text Testimonial text Testimonial text Testimonial text Testimonial text.
Testimonial text Testimonial text Testimonial text Testimonial text Testimonial text Testimonial text Testimonial text.
Testimonial text Testimonial text Testimonial text Testimonial text Testimonial text Testimonial text Testimonial text.
    <br>
    <em>– ABC Sharma</em>
  </p>
</blockquote>
             </div>
</div> 
    <div class="row text-center" style="padding-top:10px">
    <button class="btn btn-default " >MORE REVIEWS <i class="fa fa-thumbs-up"></i></button></div>
</div>
<hr />
<section id="subscribe">
	<div class="row hotel-subscribe-row">
			<div class="container text-center">
				<div class="section-title">
					<h2>GET IN TOUCH</h2>
					<h4>SUBSCRIBE</h4>
					<div class="space"></div>
					<p>
						Subscribe to our news letter.
					</p>
				</div>
				<div class="col-md-8 col-md-offset-2 subscribe-box">
					<form>
						<div class="col-md-11 col-sm-11 col-xs-10 clear-padding">
							<input type="email" class="form-control" required="" name="email" placeholder="Enter Your Email to Subscribe">
						</div>
						<div class="col-md-1 col-sm-1 col-xs-2 clear-padding">
							<button type="submit" class="subscribe-btn btn"><i class="fa fa-paper-plane"></i></button>
						</div>
					</form>
				</div>
			</div>
	</div>
</section>

HomeController.cs
===================

  public ActionResult Index()
        {
            CreateViewBag();
            return View();
        }

        void CreateViewBag()
        { 
            _commonHelper =new CommonHelper();
            ViewBag.SliderImages = _commonHelper.GetImages(CommonHelper.ImageType.Slider);
            _commonHelper = null;
        }
	
        
       
16-Aug-2017
=========================

PackagesController.cs
-------------------------

 [HttpPost]
        public ActionResult Create(PackageViewModel model) {

            _commonHelper = new CommonHelper();
            if (_commonHelper.CreatePackage(model, User.Identity.Name))
                Success("The package has been created successfully.", true);
            else
                Danger("The package has been created successfully.", false);
            model.PackageTypes = _commonHelper.GetPackageTypes();
            _commonHelper = null;
            return View(model);
        }

CommonHelper.cs
----------------------------

 public bool CreatePackage(PackageViewModel model, string user) {
           bool isSave = false;
           using (camphorizonEntities db = new camphorizonEntities()) {

               var package = new Package() { Active = model.Active,
                                             CreatedBy = user,
                                             CreatedDate = DateTime.UtcNow,
                                             Description = model.Description,
                                             Duration = model.Duration,
                                             Name = model.Name,
                                            Price = model.Price,
                                            UpdatedBy = user,
                                            UpdatedDate = DateTime.UtcNow
               };

               db.Packages.Add(package);

               if (db.SaveChanges() > 0)
               {
                   isSave = true;
               }
               else {
                   isSave = false;
               }

               db.PackageInclusions.Add(new PackageInclusion()
               {
                   CreateDate = DateTime.UtcNow,
                   CreatedBy = user,
                   Inclusions = model.Inclusions,
                   PackageID = package.Id,
                   UpdateDate = DateTime.UtcNow,
                   UpdatedBy = user
               });

               db.PackageItineraries.Add(new PackageItinerary()
               {
                   CreateDate = DateTime.UtcNow,
                   CreatedBy = user,
                   Itinerary = model.Itinerary,
                   PackageID = package.Id,
                   UpdateDate = DateTime.UtcNow,
                   UpdatedBy = user
               });

               db.PackageExclusions.Add(new PackageExclusion()
               {
                   CreateDate = DateTime.UtcNow,
                   CreatedBy = user,
                   Exclusions = model.Exclusions,
                   PackageID = package.Id,
                   UpdateDate = DateTime.UtcNow,
                   UpdatedBy = user
               });

               if (db.SaveChanges() > 0)
                   isSave = true;
               else
                   isSave = false;
           }
           return isSave;
       }
       
    Packages - Create.cshtml
    ---------------------------
    
    @{
    ViewBag.Title = "Create Package";
    Layout = "~/Views/Shared/_AdminLayoutMaster.cshtml";
}

<link href="~/Content/kendo/2017.2.621/kendo.common.min.css" rel="stylesheet" />
<link href="~/Content/kendo/2017.2.621/kendo.default.min.css" rel="stylesheet" />

<script src="http://kendo.cdn.telerik.com/2017.1.118/js/kendo.all.min.js"></script>
@model Camphorizon.Web.ViewModels.PackageViewModel
<h2>Create Package <i class="fa fa-suitcase"></i></h2>

<hr />
<ol class="breadcrumb">
    <li><a href="@Url.Action("Index","Administrator")">Home</a></li>
    <li class="active">Create Packages/Rooms</li>
</ol>
<div class="row">
    <div class="col-md-10 col-lg-10 col-xs-10 col-sm-10">
        @using (Html.BeginForm("Create", "Packages", FormMethod.Post, new { @class = "form-horizontal"}))
        {

            <div class="form-group">
                <label class="col-sm-3 control-label">Name</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Package Type</label>
                <div class="col-sm-8">
                    @Html.DropDownListFor(m => m.PackageType, Model.PackageTypes, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Description</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label">Package Duration</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.Duration, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label">Price(INR)</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.Price, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Itinerary</label>
                <div class="col-sm-8">
                    @Html.TextAreaFor(m => m.Itinerary)
                </div>
            </div>
    
    <div class="form-group">
        <label class="col-sm-3 control-label">Inclusions</label>
        <div class="col-sm-8">
            @Html.TextAreaFor(m => m.Inclusions, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-3 control-label">Exclusions</label>
        <div class="col-sm-8">
            @Html.TextAreaFor(m => m.Exclusions, new { @class = "form-control" })
        </div>
    </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Active</label>
                <div class="col-sm-8">
                    @Html.CheckBoxFor(m => m.Active)
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-3 col-sm-8">
                    <button type="submit" class="btn btn-primary"><i class="fa fa-upload"></i> Upload</button>
                </div>
            </div>

        }

        <hr />
        <a href="@Url.Action("Index","Image")" class="btn btn-danger"><i class="fa fa-backward"></i> Back to queue</a>
    </div>
</div>

<script>
    $(document).ready(function () {
        // create Editor from textarea HTML element with default set of tools
        $("#Itinerary").kendoEditor({
            resizable: {
                content: true,
                toolbar: true
            }
        });
        $("#Inclusions").kendoEditor({
            resizable: {
                content: true,
                toolbar: true
            }
        });

        $("#Exclusions").kendoEditor({
            resizable: {
                content: true,
                toolbar: true
            }
        });
    });
</script>

18-Aug-2018
=======================

CommonHelper.cs
-------------------

  public List<PackageViewModel> GetPackages(bool isNonActiveIncluded=true){
           using (camphorizonEntities db = new camphorizonEntities()) { 
           List<int> packageIDs = null;

           List<PackageViewModel> lstPackages = new List<PackageViewModel>();

           if (isNonActiveIncluded)
               packageIDs = db.Packages.Select(x => x.Id).ToList();
           else
               packageIDs = db.Packages.Where(x => x.Active == true).Select(x => x.Id).ToList();

           foreach (var id in packageIDs)
           {
               lstPackages.Add(GetPackage(id, db));
           }

           return lstPackages;
           }
       }

       public PackageViewModel GetPackage(int id, camphorizonEntities db)
       {
           var package = new PackageViewModel(db.Packages.Where(x => x.Id == id).FirstOrDefault(), false);

           return package;
       }
       
PackagesController.cs
--------------------------

 public ActionResult Index()
        {
            _commonHelper = new CommonHelper();
            var packages = _commonHelper.GetPackages();
            _commonHelper = null;
            return View(packages);
        }



PackageViewModel.cs
----------------------------


 public class PackageViewModel
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public decimal Price { get; set; }
        public short Duration { get; set; }
        public bool Active { get; set; }
        public string Itinerary { get; set; }
        public string Inclusions { get; set; }
        public string Exclusions { get; set; }
        public int PackageType { get; set; }
        public string Package { get; set; }
        public SelectList PackageTypes { get; set; }
        public string Status { get; set; }

        public PackageViewModel() { }

        public PackageViewModel(Package model, bool isDesctiptive=true) {
            this.Active = model.Active.Value;
            this.Description = model.Description;
            
            if(isDesctiptive)
            {
            this.Exclusions = model.PackageExclusions.FirstOrDefault().Exclusions;
            this.Inclusions = model.PackageInclusions.FirstOrDefault().Inclusions;
            this.Itinerary = model.PackageItineraries.FirstOrDefault().Itinerary;
            }

            this.Duration = model.Duration.Value;
            this.Id = model.Id;
            this.Status = model.Active.Value ? "Active" : "Non-Active";
            this.Name = model.Name;
            this.Price = model.Price.Value;
            
        }
    }
    
    Packages- Index.cshtml
    ------------------------
    
    @{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayoutMaster.cshtml";
}

@using GridMvc.Html
@model List<Camphorizon.Web.ViewModels.PackageViewModel>
<h2>Uploaded Images</h2>
<hr />
<ol class="breadcrumb">
    <li><a href="@Url.Action("Index","Administrator")">Home</a></li>
    <li class="active">Packages </li>
</ol>
<div class="row">
    <div class="col-md-12">

        @Html.Grid(Model).Columns(columns =>
{
    columns.Add(data => data.Id).Titled("ID");
    columns.Add(data => data.Name).Titled("Name");
    columns.Add()
       .Titled("Status")
       .Encoded(false)
       .Sanitized(false)
       .SetWidth(30)
       .RenderValueAs(o => o.Active==true? @<label class="label label-success">Active</label>:@<label class="label label-success">Active</label>);
    columns.Add(data => data.Duration).Titled("Duration (in Days)").Sortable(true);
    columns.Add(data => data.Price).Titled("Price (INR)");
    columns.Add()
        .Titled("Actions")
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(30)
        .RenderValueAs(o => @<a href="@Url.Action("Edit", "Packages", new { id = o.Id })" class="btn btn-info">Edit <i class="fa fa-edit"></i></a>);
}).WithPaging(20)
        <hr />
        <a href="@Url.Action("Create","Packages")" class="btn btn-primary"><i class="fa fa-plus"></i> Add New Package/Room </a>

    </div>
</div>




    

    
   
